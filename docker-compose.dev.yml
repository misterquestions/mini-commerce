services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: minicommerce
      POSTGRES_USER: minicommerce
      POSTGRES_PASSWORD: minicommerce
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U minicommerce" ]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/minicommerce
      SPRING_DATASOURCE_USERNAME: minicommerce
      SPRING_DATASOURCE_PASSWORD: minicommerce
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
      db:
        condition: service_healthy
